{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["content","from","to","year","month","days","vatpercent","amount","vatamount","total","calc","event","preventDefault","date_From","target","form","value","date_To","vat","alert","fromYear","parseInt","substr","fromMonth","fromDay","toYear","toMonth","toDay","fromDate","Date","toDate","tod","getTime","years","Math","floor","daysdiff","vatmonth","struct_Data","App","useEffect","document","getElementById","date","toISOString","className","id","htmlFor","type","name","selected","disabled","autoComplete","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qKAGIA,EAAU,CACbC,KAAM,KACNC,GAAI,KACJC,KAAM,KACNC,MAAO,KACPC,KAAM,KACNC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,MAAO,MAGFC,EAAO,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAYF,EAAMG,OAAOC,KAAKd,KAAKe,MACnCC,EAAUN,EAAMG,OAAOC,KAAKb,GAAGc,MAC/BE,EAAMP,EAAMG,OAAOC,KAAKG,IAAIF,MAC5BT,EAASI,EAAMG,OAAOC,KAAKR,OAAOS,MACxC,GACe,OAAdH,GACc,KAAdA,GACY,OAAZI,GACY,KAAZA,GACQ,MAARC,GACW,OAAXX,GACW,KAAXA,EAEkB,OAAdM,GAAoC,KAAdA,EACzBM,MAAM,0BACgB,OAAZF,GAAgC,KAAZA,EAC9BE,MAAM,wBACY,MAARD,EACVC,MAAM,4BACe,OAAXZ,GAA8B,KAAXA,GAC7BY,MAAM,mCAED,GAAIZ,EAAS,IACnBY,MAAM,mDACA,CAEN,IAAMC,EAAWC,SAASR,EAAUS,OAAO,EAAG,GAAI,IAC5CC,EAAYF,SAASR,EAAUS,OAAO,EAAG,GAAI,IAC7CE,EAAUH,SAASR,EAAUS,OAAO,EAAG,IAAK,IAE5CG,EAASJ,SAASJ,EAAQK,OAAO,EAAG,GAAI,IACxCI,EAAUL,SAASJ,EAAQK,OAAO,EAAG,GAAI,IACzCK,EAAQN,SAASJ,EAAQK,OAAO,EAAG,IAAK,IAExCM,EAAW,IAAIC,KAAKT,EAAUG,EAAY,EAAGC,GAC7CM,EAAS,IAAID,KAAKJ,EAAQC,EAAU,EAAGC,GAE7C,GAAIC,GAAYE,EACfX,MAAM,+BACA,GAAIS,EAAWE,EAAQ,CAG7B,IAAMC,EAAMD,EAAOE,UAAYJ,EAASI,UAElCC,EAAQC,KAAKC,MAAMJ,EAAM,YACzBK,EAAWF,KAAKC,MAAOJ,EAAM,WAAe,OAC5C3B,EAAQ8B,KAAKC,MAAMC,EAAW,SAC9B/B,EAAO6B,KAAKC,MAAMC,EAAW,SAQ/BC,EAFqB,GAARJ,EAAa7B,EAEJ,EAEtBC,EAAO,GACVgC,GAAsB,GACZhC,GAAQ,KAClBgC,GAAsB,GAKvB,IAEM5B,EAFYF,EAAS,IAEDW,EAAMmB,EAEhCrC,EAAU,CACTC,KAAMY,EACNX,GAAIe,EACJd,KAAM8B,EACN7B,MAAOA,EACPC,KAAMA,EACNC,WAAYY,EACZX,OAAQA,EACRC,UAAWC,EACXA,MAAOY,SAASd,GAAUc,SAASZ,IAGpC,IAAM6B,EAAW,yBACRtC,EAAQC,KADA,wBAEVD,EAAQE,GAFE,kCAGDF,EAAQG,KAHP,mCAIAH,EAAQI,MAJR,gCAKFJ,EAAQK,KALN,iCAMDL,EAAQM,WANP,sCAOIN,EAAQO,OAPZ,oCAQEP,EAAQQ,UARV,iFAUGR,EAAQS,MAVX,wBAcjBU,MAAMmB,MA+DMC,MA1Df,WAOC,OANAC,qBAAU,WACT,IAAMV,EAASW,SAASC,eAAe,MACjCC,EAAO,IAAId,KACjBC,EAAOd,MAAQ2B,EAAKC,cAActB,OAAO,EAAG,MAC1C,IAGF,sBAAKuB,UAAU,MAAf,UACC,8BACC,wDAED,qBAAKA,UAAU,OAAf,SACC,uBAAMA,UAAU,OAAOC,GAAG,QAA1B,UACC,sBAAKD,UAAU,MAAf,UACC,uBAAOE,QAAQ,OAAf,qBACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOH,GAAG,YAEnC,sBAAKD,UAAU,MAAf,UACC,uBAAOE,QAAQ,KAAf,mBACA,uBAAOC,KAAK,OAAOC,KAAK,KAAKH,GAAG,UAEjC,sBAAKD,UAAU,MAAf,UACC,uBAAOE,QAAQ,MAAf,+BACA,yBAAQE,KAAK,MAAMH,GAAG,MAAtB,UACC,wBAAQ9B,MAAO,EAAGkC,UAAU,EAAMC,UAAU,EAA5C,oCAGA,wBAAQnC,MAAO,EAAf,kBACA,wBAAQA,MAAO,IAAf,kBACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,IAAf,kBACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,IAAf,kBACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,IAAf,kBACA,wBAAQA,MAAO,EAAf,wBAGF,sBAAK6B,UAAU,MAAf,UACC,uBAAOE,QAAQ,SAAf,uBACA,uBACCC,KAAK,OACLC,KAAK,SACLH,GAAG,SACHM,cAAc,OAGhB,sBAAKP,UAAU,MAAf,UACC,uBAAOG,KAAK,QAAQhC,MAAM,UAC1B,uBAAOgC,KAAK,SAASK,QAAS3C,EAAMM,MAAM,0BC3JjCsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,K","file":"static/js/main.d8fbf3c7.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect } from 'react';\n\nlet content = {\n\tfrom: null,\n\tto: null,\n\tyear: null,\n\tmonth: null,\n\tdays: null,\n\tvatpercent: null,\n\tamount: null,\n\tvatamount: null,\n\ttotal: null\n};\n\nconst calc = (event) => {\n\tevent.preventDefault();\n\tconst date_From = event.target.form.from.value;\n\tconst date_To = event.target.form.to.value;\n\tconst vat = event.target.form.vat.value;\n\tconst amount = event.target.form.amount.value;\n\tif (\n\t\tdate_From === null ||\n\t\tdate_From === '' ||\n\t\tdate_To === null ||\n\t\tdate_To === '' ||\n\t\tvat === '0' ||\n\t\tamount === null ||\n\t\tamount === ''\n\t) {\n\t\tif (date_From === null || date_From === '') {\n\t\t\talert('please check From date');\n\t\t} else if (date_To === null || date_To === '') {\n\t\t\talert('please check To date');\n\t\t} else if (vat === '0') {\n\t\t\talert('please check vat percent');\n\t\t} else if (amount === null || amount === '') {\n\t\t\talert('please enter valid ammount');\n\t\t}\n\t} else if (amount < 1000) {\n\t\talert('please enter the amount value above Rs:1000');\n\t} else {\n\t\t// main calculation for the month\n\t\tconst fromYear = parseInt(date_From.substr(0, 4), 10);\n\t\tconst fromMonth = parseInt(date_From.substr(5, 6), 10);\n\t\tconst fromDay = parseInt(date_From.substr(8, 10), 10);\n\n\t\tconst toYear = parseInt(date_To.substr(0, 4), 10);\n\t\tconst toMonth = parseInt(date_To.substr(5, 6), 10);\n\t\tconst toDay = parseInt(date_To.substr(8, 10), 10);\n\n\t\tconst fromDate = new Date(fromYear, fromMonth - 1, fromDay);\n\t\tconst toDate = new Date(toYear, toMonth - 1, toDay);\n\n\t\tif (fromDate >= toDate) {\n\t\t\talert('Check The Entered Date');\n\t\t} else if (fromDate < toDate) {\n\t\t\t// two date perfectly geathered\n\n\t\t\tconst tod = toDate.getTime() - fromDate.getTime();\n\n\t\t\tconst years = Math.floor(tod / 31556736000);\n\t\t\tconst daysdiff = Math.floor((tod % 31556736000) / 86400000);\n\t\t\tconst month = Math.floor(daysdiff / 30.4167);\n\t\t\tconst days = Math.floor(daysdiff % 30.4167);\n\n\t\t\t// main calculation is started\n\n\t\t\t// month calculation\n\n\t\t\tconst totMonth = years * 12 + month;\n\n\t\t\tlet vatmonth = totMonth - 1;\n\n\t\t\tif (days < 15) {\n\t\t\t\tvatmonth = vatmonth + 0.5;\n\t\t\t} else if (days >= 15) {\n\t\t\t\tvatmonth = vatmonth + 1;\n\t\t\t}\n\n\t\t\t// amount calculation\n\n\t\t\tconst vatAmount = amount / 100;\n\n\t\t\tconst total = vatAmount * vat * vatmonth;\n\n\t\t\tcontent = {\n\t\t\t\tfrom: date_From,\n\t\t\t\tto: date_To,\n\t\t\t\tyear: years,\n\t\t\t\tmonth: month,\n\t\t\t\tdays: days,\n\t\t\t\tvatpercent: vat,\n\t\t\t\tamount: amount,\n\t\t\t\tvatamount: total,\n\t\t\t\ttotal: parseInt(amount) + parseInt(total)\n\t\t\t};\n\n\t\t\tconst struct_Data = `\n\t\t\tFrom : ${content.from}\n\t\t\tTo : ${content.to} \n\t\t\tno of Years : ${content.year} \n\t\t\tno of Months : ${content.month}\n\t\t\tno of Days : ${content.days}\n\t\t\tVAT percent : ${content.vatpercent}\n\t\t\tActual Amount : Rs ${content.amount}\n\t\t\tVAT Amount :  Rs ${content.vatamount}\n\t\t\t             -----------------------\n\t\t\tTotal Amount : Rs ${content.total}    \n\t\t\t\n\t\t\t`;\n\n\t\t\talert(struct_Data);\n\t\t}\n\t}\n};\n\nfunction App() {\n\tuseEffect(() => {\n\t\tconst toDate = document.getElementById('to');\n\t\tconst date = new Date();\n\t\ttoDate.value = date.toISOString().substr(0, 10);\n\t}, []);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<nav>\n\t\t\t\t<h1>Jaanu Vat Calculator</h1>\n\t\t\t</nav>\n\t\t\t<div className='main'>\n\t\t\t\t<form className='form' id='form1'>\n\t\t\t\t\t<div className='sub'>\n\t\t\t\t\t\t<label htmlFor='from'>From : </label>\n\t\t\t\t\t\t<input type='date' name='from' id='from' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sub'>\n\t\t\t\t\t\t<label htmlFor='to'>To : </label>\n\t\t\t\t\t\t<input type='date' name='to' id='to' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sub'>\n\t\t\t\t\t\t<label htmlFor='vat'>Percent of Vat : </label>\n\t\t\t\t\t\t<select name='vat' id='vat'>\n\t\t\t\t\t\t\t<option value={0} selected={true} disabled={true}>\n\t\t\t\t\t\t\t\tSelect The Vat Percent\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value={2}>2.0%</option>\n\t\t\t\t\t\t\t<option value={2.5}>2.5%</option>\n\t\t\t\t\t\t\t<option value={3}>3.0%</option>\n\t\t\t\t\t\t\t<option value={3.5}>3.5%</option>\n\t\t\t\t\t\t\t<option value={4}>4.0%</option>\n\t\t\t\t\t\t\t<option value={4.5}>4.5%</option>\n\t\t\t\t\t\t\t<option value={5}>5.0%</option>\n\t\t\t\t\t\t\t<option value={5.5}>5.5%</option>\n\t\t\t\t\t\t\t<option value={6}>6.0%</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sub'>\n\t\t\t\t\t\t<label htmlFor='amount'>Amount : </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='amount'\n\t\t\t\t\t\t\tid='amount'\n\t\t\t\t\t\t\tautoComplete={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sub'>\n\t\t\t\t\t\t<input type='reset' value='Reset' />\n\t\t\t\t\t\t<input type='submit' onClick={calc} value='Calculate' />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}